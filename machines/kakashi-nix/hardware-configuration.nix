# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  inputs,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    # M2 Macbook support
    inputs.apple-silicon.nixosModules.apple-silicon-support

    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    consoleLogLevel = 0;
    kernelParams = ["apple_dcp.show_notch=1"];

    initrd.availableKernelModules = ["usb_storage"];
    initrd.kernelModules = [];
    kernelModules = [];
    extraModulePackages = [];
  };

  # setting WLR Graphic Card - needed for hyprland
  environment.sessionVariables = {
    WLR_DRM_DEVICES = "/dev/dri/card0";
  };

  # experimental GPU drivers - needed for hyperland
  hardware = {
    asahi = {
      #      withRust = true;
      #      useExperimentalGPUDriver = true;
      #      experimentalGPUInstallMode = "replace";
      peripheralFirmwareDirectory = ./firmware;
    };
    graphics.enable = true;
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/fad9765b-d18a-4321-8ad4-9ccf1fb4bf33";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/A3EE-1B08";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
