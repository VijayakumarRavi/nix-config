name: üèóÔ∏è Build and push cache to attic

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: null
  schedule:
    - cron: 0 0 * * *
  push:

# Workflow permissions
permissions:
  contents: write
  id-token: write

jobs:
  Linux:
    name: Build üë∑‚Äç‚ôÇÔ∏è & Upload üìÄ Linux Machines
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # Here we specify the matrix of our hosts and their target platform architectures
      matrix:
        machine:
          - host: zoro
            platform: x86_64-linux
            config: nixosConfigurations
          - host: usopp
            platform: x86_64-linux
            config: nixosConfigurations
          - host: nami
            platform: aarch64-linux
            config: nixosConfigurations

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup QEMU for ARM builds
        if: matrix.machine.platform == 'aarch64-linux'
        uses: docker/setup-qemu-action@v3

      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          # We set our custom GitHub token for any private flake inputs we might have
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # We add all the config for extra platforms, other binary caches and to raise the number of connections that can be made
          extra-conf: |
            fallback = true
            http-connections = 128
            max-substitution-jobs = 128
            accept-flake-config = true
            extra-platforms = aarch64-linux
            substituters = https://atticcache.fly.dev/system?priority=43 https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= system:gzdIUkeQT1/YeohwHOQGWv3T975iWVwOxAXemBOxL24= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE=

      - name: Enable Github Cache for Nix store
        id: nix-cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Install Attic binary cache
        uses: yaxitech/nix-install-pkgs-action@v4
        with:
          packages: "attic-client"

      - name: Update flake.lock
        run: nix flake update

      - name: Build & upload cache
        run: |
          nix build .#${{matrix.machine.config}}.${{matrix.machine.host}}.config.system.build.toplevel --system ${{matrix.machine.platform}}
          attic login fly https://atticcache.fly.dev ${{ secrets.ATTIC_TOKEN }}
          attic push system result -j 2

      - name: Commit and Push
        if: matrix.machine.host == 'zoro'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Bot ü§ñ(flake): bump flake.lock"
          commit_user_name: Flake Bot
          commit_options: --no-verify --signoff
          commit_author: Flake Bot <github-actions@github.com>
          branch: master
          file_pattern: flake.lock
          skip_dirty_check: false
          skip_fetch: true

  Macos:
    name: Build üë∑‚Äç‚ôÇÔ∏è & Upload üìÄ Macos Machines
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        machine:
          - host: kakashi
            config: darwinConfigurations

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          # We set our custom GitHub token for any private flake inputs we might have
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # We add all the config for extra platforms, other binary caches and to raise the number of connections that can be made
          extra-conf: |
            fallback = true
            http-connections = 128
            max-substitution-jobs = 128
            accept-flake-config = true
            extra-platforms = aarch64-linux
            substituters = https://atticcache.fly.dev/system?priority=43 https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= system:gzdIUkeQT1/YeohwHOQGWv3T975iWVwOxAXemBOxL24= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE=

      - name: Enable Github Cache for Nix store
        id: nix-cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Install Attic binary cache
        uses: yaxitech/nix-install-pkgs-action@v4
        with:
          packages: "attic-client"

      - name: Update flake.lock
        run: nix flake update

      - name: Build & upload cache
        run: |
          nix build .#${{matrix.machine.config}}.${{matrix.machine.host}}.config.system.build.toplevel
          attic login fly https://atticcache.fly.dev ${{ secrets.ATTIC_TOKEN }}
          attic push system result -j 2
