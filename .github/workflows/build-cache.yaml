# yamllint disable rule:line-length rule:document-start rule:truthy
name: üèóÔ∏è Nix, NixOS and MacOS config Build, release and upload cache
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: null
  # daily at 12:03 India Standard Time
  schedule:
    - cron: 33 18 * * *
# Workflow permissions
permissions:
  contents: write
  id-token: write
jobs:
  Macos:
    name: Build üë∑‚Äç‚ôÇÔ∏è & Upload Cache üìÄ For Macos Machines
    runs-on: macos-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        machine:
          - host: kakashi
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@v3
        with:
          planner: macos
          github-token: ${{ secrets.GITHUB_TOKEN }}
          extra-conf: |
            fallback = true
            sandbox = false
            http-connections = 128
            max-substitution-jobs = 128
            accept-flake-config = true
            extra-platforms = aarch64-linux
            substituters = https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE=
      - name: Enable Github Cache for Nix store
        id: nix-cache
        uses: DeterminateSystems/magic-nix-cache-action@v8
      - name: Enable Cachix binary cache
        uses: cachix/cachix-action@v15
        with:
          name: vijay
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Update flake.lock
        run: nix flake update
      - name: upload flake.lock
        uses: actions/upload-artifact@v4
        with:
          name: flake.lock
          path: flake.lock
      - name: Build & upload cache
        run: nix build .#darwinConfigurations.${{matrix.machine.host}}.config.system.build.toplevel
      - name: Commit and Push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Bot ü§ñ(flake): bump flake.lock'
          commit_user_name: Flake Bot
          commit_options: --no-verify --signoff
          commit_author: Flake Bot <github-actions@github.com>
          branch: master
          file_pattern: flake.lock
          skip_dirty_check: false
          skip_fetch: true
  Linux:
    name: Build üë∑‚Äç‚ôÇÔ∏è & Upload Cache üìÄ For Linux Machines
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: Macos
    strategy:
      fail-fast: false
      # Here we specify the matrix of our hosts and their target platform architectures
      matrix:
        machine:
          - host: zoro
            platform: x86_64-linux
          - host: usopp
            platform: x86_64-linux
          - host: nixiso
            platform: x86_64-linux
          - host: nami
            platform: aarch64-linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup QEMU for ARM builds
        if: matrix.machine.platform == 'aarch64-linux'
        uses: docker/setup-qemu-action@v3
      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@v3
        with:
          # We set our custom GitHub token for any private flake inputs we might have
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # We add all the config for extra platforms, other binary caches and to raise the number of connections that can be made
          extra-conf: |
            fallback = true
            sandbox = false
            http-connections = 128
            max-substitution-jobs = 128
            accept-flake-config = true
            extra-platforms = aarch64-linux
            substituters = https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE=
      - name: Enable Github Cache for Nix store
        id: nix-cache
        uses: DeterminateSystems/magic-nix-cache-action@v8
      - name: Enable Cachix binary cache
        uses: cachix/cachix-action@v15
        with:
          name: vijay
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Download flake.lock
        uses: actions/download-artifact@v4
        with:
          name: flake.lock
      - name: Build & upload cache
        run: nix build .#nixosConfigurations.${{matrix.machine.host}}.config.system.build.toplevel --system ${{matrix.machine.platform}}
  NixISO:
    name: Buildig & Release üë∑‚Äç‚ôÇÔ∏è New NixOS ISO üìÄ
    needs: Linux
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        machine:
          - host: kakashi
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@v3
        with:
          # We set our custom GitHub token for any private flake inputs we might have
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # We add all the config for extra platforms, other binary caches and to raise the number of connections that can be made
          extra-conf: |
            fallback = true
            sandbox = false
            http-connections = 128
            max-substitution-jobs = 128
            accept-flake-config = true
            extra-platforms = aarch64-linux
            substituters = https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE=
      - name: Get current date
        id: date
        run: echo "date=$(TZ="Asia/Kolkata" date +'%d-%m-%Y')" >> "$GITHUB_OUTPUT"
      - name: Enable Github Cache for Nix store
        id: nix-cache
        uses: DeterminateSystems/magic-nix-cache-action@v8
      - name: Download flake.lock
        uses: actions/download-artifact@v4
        with:
          name: flake.lock
      - name: Build NixOS ISO
        run: nix build .#nixosConfigurations.nixiso.config.system.build.isoImage
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Nixos Daily Build ${{ steps.date.outputs.date }}
          tag_name: '${{ steps.date.outputs.date }}'
          make_latest: true
          generate_release_notes: true
          files: |
            ./result/iso/NixOS.iso
