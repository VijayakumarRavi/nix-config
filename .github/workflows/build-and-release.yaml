name: Build and Release NixOS ISO

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    paths:
      - "flake.nix"
      - "flake.lock"
      - "machines/nixiso/**"
      - ".github/workflows/build-and-release.yaml"
  pull_request:
    paths:
      - "flake.nix"
      - "flake.lock"
      - "machines/nixiso/**"
      - ".github/workflows/build-and-release.yaml"

jobs:
  Create-tag:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.create_tag.outputs.TAG }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if tag exists
        id: tag_exists
        run: |
          TAG=$(date +%d-%m-%Y)
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Skipping tag creation."
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "Tag $TAG does not exist. Creating tag."
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create GitHub tag with current date
        if: env.TAG_EXISTS == 'false'
        id: create_tag
        run: |
          TAG=$(date +%d-%m-%Y)
          git tag $TAG
          git push origin $TAG
          echo "TAG=$TAG" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  Build:
    runs-on: ubuntu-latest
    needs: Create-tag
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Nix
        uses: cachix/install-nix-action@v21
        with:
          nix_version: 2.14.0

      - name: Build NixOS ISO
        run: |
          nix build --accept-flake-config .#nixos-iso

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Nixos ISO ${{ needs.Create-tag.outputs.tag_name }}
          tag_name: ${{ needs.Create-tag.outputs.tag_name }}
          make_latest: true
          generate_release_notes: true
          files: ./result/iso/NixOS.iso
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #      - name: Upload ISO as artifact
      #        uses: actions/upload-artifact@v3
      #        with:
      #          name: nixos-iso
      #          path: ./result/iso/NixOS.iso
      #
      #  Release:
      #    needs: [Create-tag, Build]
      #    runs-on: ubuntu-latest
      #    steps:
      #      - name: Download ISO artifact
      #        uses: actions/download-artifact@v3
      #        with:
      #          name: nixos-iso
      #
